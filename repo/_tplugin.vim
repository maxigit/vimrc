" This file was generated by TPluginScan.
if g:tplugin_autoload == 2 && g:loaded_tplugin != 13 | throw "TPluginScan:Outdated" | endif
TPluginBefore \<quickfixsigns_vim[\/]autoload[\/] TPlugin tlib_vim
TPluginBefore \<quickfixsigns_vim[\/]autoload[\/] TPlugin quickfixsigns_vim
TPluginBefore \<tregisters_vim[\/]autoload[\/] TPlugin tlib_vim
TPluginBefore \<tregisters_vim[\/]autoload[\/] TPlugin tregisters_vim
TPluginBefore \<ttags_vim[\/]autoload[\/] TPlugin tlib_vim
TPluginBefore \<ttags_vim[\/]autoload[\/] TPlugin ttags_vim
TPluginBefore \<ttoc_vim[\/]autoload[\/] TPlugin tlib_vim
TPluginBefore \<ttoc_vim[\/]autoload[\/] TPlugin ttoc_vim
call TPluginDependencies('quickfixsigns_vim', ['tlib_vim'])
call TPluginDependencies('tjumps_vim', ['tlib_vim'])
call TPluginDependencies('tregisters_vim', ['tlib_vim'])
call TPluginDependencies('ttags_vim', ['tlib_vim'])
call TPluginDependencies('ttoc_vim', ['tlib_vim'])
augroup filetypedetect
" Cucumber
autocmd BufNewFile,BufReadPost *.feature,*.story set filetype=cucumber
augroup END
augroup filetypedetect
" Install Filetype detection for CSV files
au BufRead,BufNewFile *.csv,*.dat	set filetype=csv
augroup END
augroup filetypedetect
" Cucumber
autocmd BufNewFile,BufReadPost *.feature,*.story set filetype=cucumber
augroup END
augroup filetypedetect
" Ruby
au BufNewFile,BufRead *.rb,*.rbw,*.gem,*.gemspec	set filetype=ruby

" Ruby on Rails
au BufNewFile,BufRead *.builder,*.rxml,*.rjs		set filetype=ruby

" Rakefile
au BufNewFile,BufRead [rR]akefile,*.rake		set filetype=ruby

" Rantfile
au BufNewFile,BufRead [rR]antfile,*.rant		set filetype=ruby

" eRuby
au BufNewFile,BufRead *.erb,*.rhtml			set filetype=eruby
augroup END
augroup filetypedetect
" Install Filetype detection for CSV files
au BufRead,BufNewFile *.csv,*.dat	set filetype=csv
augroup END
augroup filetypedetect
" Cucumber
autocmd BufNewFile,BufReadPost *.feature,*.story set filetype=cucumber
augroup END
augroup filetypedetect
" Ruby
au BufNewFile,BufRead *.rb,*.rbw,*.gem,*.gemspec	set filetype=ruby

" Ruby on Rails
au BufNewFile,BufRead *.builder,*.rxml,*.rjs		set filetype=ruby

" Rakefile
au BufNewFile,BufRead [rR]akefile,*.rake		set filetype=ruby

" Rantfile
au BufNewFile,BufRead [rR]antfile,*.rant		set filetype=ruby

" eRuby
au BufNewFile,BufRead *.erb,*.rhtml			set filetype=eruby
augroup END
augroup filetypedetect
autocmd BufNewFile,BufReadPost *.org setfiletype org
"autocmd BufNewFile,BufReadPost org:todo* setfiletype orgtodo
augroup END
call TPluginFiletype('csv', ['doc', 'plugin'])
call TPluginFiletype('notes', ['vim-notes'])
call TPluginFiletype('netrw', ['doc', 'plugin'])
call TPluginFiletype('vim-rspec', ['vim-rspec'])
call TPluginFiletype('git-diff', ['doc', 'plugin'])
call TPluginFiletype('git-log', ['doc', 'plugin'])
call TPluginFiletype('eruby', ['doc', 'plugin'])
call TPluginFiletype('git-status', ['doc', 'plugin'])
call TPluginFiletype('orgtodo', ['vim-orgmode'])
call TPluginFiletype('snippet', ['doc', 'plugin'])
call TPluginFiletype('conque_term', ['doc', 'plugin'])
call TPluginFiletype('threesome', ['threesome.vim'])
call TPluginFiletype('html_snip_helper', ['doc', 'plugin'])
call TPluginFiletype('tcalc', ['doc', 'plugin'])
call TPluginFiletype('gitv', ['gitv'])
call TPluginFiletype('orgagenda', ['vim-orgmode'])
call TPluginFiletype('syncolor', ['doc', 'plugin'])
call TPluginFiletype('cucumber', ['doc', 'cucumber', 'plugin'])
call TPluginFiletype('org', ['vim-orgmode'])
call TPluginFiletype('ruby', ['doc', 'plugin'])
call TPluginAutoload('nrrwrgn', ['NrrwRgn', '.'])
call TPluginAutoload('ctrlp#buffertag', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#dir', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#line', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#mrufiles', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#quickfix', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#rtscript', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#tag', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#undo', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#utils', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp', ['ctrlp.vim', '.'])
call TPluginAutoload('dbext', ['dbext', '.'])
call TPluginAutoload('dbext_dbi', ['dbext', '.'])
call TPluginAutoload('delimitMate', ['delimitMate', '.'])
call TPluginAutoload('delimitMateTests', ['delimitMate', '.'])
call TPluginAutoload('DrawIt', ['doc', '.'])
call TPluginAutoload('ZoomWin', ['doc', '.'])
call TPluginAutoload('calutil', ['doc', '.'])
call TPluginAutoload('camelcasemotion', ['doc', '.'])
call TPluginAutoload('conque_term', ['doc', '.'])
call TPluginAutoload('dbext', ['doc', '.'])
call TPluginAutoload('dbext_dbi', ['doc', '.'])
call TPluginAutoload('endwise', ['doc', '.'])
call TPluginAutoload('fuf#bookmark', ['doc', '.'])
call TPluginAutoload('fuf#buffer', ['doc', '.'])
call TPluginAutoload('fuf#callbackfile', ['doc', '.'])
call TPluginAutoload('fuf#callbackitem', ['doc', '.'])
call TPluginAutoload('fuf#changelist', ['doc', '.'])
call TPluginAutoload('fuf#dir', ['doc', '.'])
call TPluginAutoload('fuf#file', ['doc', '.'])
call TPluginAutoload('fuf#givencmd', ['doc', '.'])
call TPluginAutoload('fuf#givendir', ['doc', '.'])
call TPluginAutoload('fuf#givenfile', ['doc', '.'])
call TPluginAutoload('fuf#help', ['doc', '.'])
call TPluginAutoload('fuf#jumplist', ['doc', '.'])
call TPluginAutoload('fuf#line', ['doc', '.'])
call TPluginAutoload('fuf#mrucmd', ['doc', '.'])
call TPluginAutoload('fuf#mrufile', ['doc', '.'])
call TPluginAutoload('fuf#quickfix', ['doc', '.'])
call TPluginAutoload('fuf#tag', ['doc', '.'])
call TPluginAutoload('fuf#taggedfile', ['doc', '.'])
call TPluginAutoload('fuf', ['doc', '.'])
call TPluginAutoload('genutils', ['doc', '.'])
call TPluginAutoload('histwin', ['doc', '.'])
call TPluginAutoload('netrw', ['doc', '.'])
call TPluginAutoload('netrwFileHandlers', ['doc', '.'])
call TPluginAutoload('netrwSettings', ['doc', '.'])
call TPluginAutoload('pathogen', ['doc', '.'])
call TPluginAutoload('quickfixsigns', ['doc', '.'])
call TPluginAutoload('rails', ['doc', '.'])
call TPluginAutoload('rubycomplete', ['doc', '.'])
call TPluginAutoload('snipMate', ['doc', '.'])
call TPluginAutoload('tcalc', ['doc', '.'])
call TPluginAutoload('utl_lib', ['doc', '.'])
call TPluginAutoload('DrawIt', ['plugin', '.'])
call TPluginAutoload('ZoomWin', ['plugin', '.'])
call TPluginAutoload('calutil', ['plugin', '.'])
call TPluginAutoload('camelcasemotion', ['plugin', '.'])
call TPluginAutoload('conque_term', ['plugin', '.'])
call TPluginAutoload('dbext', ['plugin', '.'])
call TPluginAutoload('dbext_dbi', ['plugin', '.'])
call TPluginAutoload('endwise', ['plugin', '.'])
call TPluginAutoload('fuf#bookmark', ['plugin', '.'])
call TPluginAutoload('fuf#buffer', ['plugin', '.'])
call TPluginAutoload('fuf#callbackfile', ['plugin', '.'])
call TPluginAutoload('fuf#callbackitem', ['plugin', '.'])
call TPluginAutoload('fuf#changelist', ['plugin', '.'])
call TPluginAutoload('fuf#dir', ['plugin', '.'])
call TPluginAutoload('fuf#file', ['plugin', '.'])
call TPluginAutoload('fuf#givencmd', ['plugin', '.'])
call TPluginAutoload('fuf#givendir', ['plugin', '.'])
call TPluginAutoload('fuf#givenfile', ['plugin', '.'])
call TPluginAutoload('fuf#help', ['plugin', '.'])
call TPluginAutoload('fuf#jumplist', ['plugin', '.'])
call TPluginAutoload('fuf#line', ['plugin', '.'])
call TPluginAutoload('fuf#mrucmd', ['plugin', '.'])
call TPluginAutoload('fuf#mrufile', ['plugin', '.'])
call TPluginAutoload('fuf#quickfix', ['plugin', '.'])
call TPluginAutoload('fuf#tag', ['plugin', '.'])
call TPluginAutoload('fuf#taggedfile', ['plugin', '.'])
call TPluginAutoload('fuf', ['plugin', '.'])
call TPluginAutoload('genutils', ['plugin', '.'])
call TPluginAutoload('histwin', ['plugin', '.'])
call TPluginAutoload('netrw', ['plugin', '.'])
call TPluginAutoload('netrwFileHandlers', ['plugin', '.'])
call TPluginAutoload('netrwSettings', ['plugin', '.'])
call TPluginAutoload('pathogen', ['plugin', '.'])
call TPluginAutoload('quickfixsigns', ['plugin', '.'])
call TPluginAutoload('rails', ['plugin', '.'])
call TPluginAutoload('rubycomplete', ['plugin', '.'])
call TPluginAutoload('snipMate', ['plugin', '.'])
call TPluginAutoload('tcalc', ['plugin', '.'])
call TPluginAutoload('utl_lib', ['plugin', '.'])
call TPluginAutoload('quickfixsigns#breakpoints', ['quickfixsigns_vim', '.'])
call TPluginAutoload('quickfixsigns#marks', ['quickfixsigns_vim', '.'])
call TPluginAutoload('quickfixsigns#vcsdiff', ['quickfixsigns_vim', '.'])
call TPluginAutoload('quickfixsigns', ['quickfixsigns_vim', '.'])
call TPluginAutoload('rails', ['rails', '.'])
call TPluginAutoload('rainbow_parentheses', ['rainbow_parentheses.vim', '.'])
call TPluginAutoload('syntastic', ['syntastic', '.'])
call TPluginAutoload('textobj#indent', ['textobj-fatpack', '.'])
call TPluginAutoload('textobj#syntax', ['textobj-fatpack', '.'])
call TPluginAutoload('textobj#user', ['textobj-fatpack', '.'])
call TPluginAutoload('threesome', ['threesome.vim', '.'])
call TPluginAutoload('tjumps', ['tjumps_vim', '.'])
call TPluginAutoload('tlib#Filter_fuzzy', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Object', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Test', ['tlib_vim', '.'])
call TPluginAutoload('tlib#TestChild', ['tlib_vim', '.'])
call TPluginAutoload('tlib#World', ['tlib_vim', '.'])
call TPluginAutoload('tlib#agent', ['tlib_vim', '.'])
call TPluginAutoload('tlib#arg', ['tlib_vim', '.'])
call TPluginAutoload('tlib#autocmdgroup', ['tlib_vim', '.'])
call TPluginAutoload('tlib#balloon', ['tlib_vim', '.'])
call TPluginAutoload('tlib#buffer', ['tlib_vim', '.'])
call TPluginAutoload('tlib#cache', ['tlib_vim', '.'])
call TPluginAutoload('tlib#char', ['tlib_vim', '.'])
call TPluginAutoload('tlib#cmd', ['tlib_vim', '.'])
call TPluginAutoload('tlib#comments', ['tlib_vim', '.'])
call TPluginAutoload('tlib#date', ['tlib_vim', '.'])
call TPluginAutoload('tlib#dir', ['tlib_vim', '.'])
call TPluginAutoload('tlib#eval', ['tlib_vim', '.'])
call TPluginAutoload('tlib#file', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnf', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnfd', ['tlib_vim', '.'])
call TPluginAutoload('tlib#hook', ['tlib_vim', '.'])
call TPluginAutoload('tlib#input', ['tlib_vim', '.'])
call TPluginAutoload('tlib#list', ['tlib_vim', '.'])
call TPluginAutoload('tlib#map', ['tlib_vim', '.'])
call TPluginAutoload('tlib#normal', ['tlib_vim', '.'])
call TPluginAutoload('tlib#notify', ['tlib_vim', '.'])
call TPluginAutoload('tlib#paragraph', ['tlib_vim', '.'])
call TPluginAutoload('tlib#progressbar', ['tlib_vim', '.'])
call TPluginAutoload('tlib#rx', ['tlib_vim', '.'])
call TPluginAutoload('tlib#scratch', ['tlib_vim', '.'])
call TPluginAutoload('tlib#signs', ['tlib_vim', '.'])
call TPluginAutoload('tlib#string', ['tlib_vim', '.'])
call TPluginAutoload('tlib#syntax', ['tlib_vim', '.'])
call TPluginAutoload('tlib#tab', ['tlib_vim', '.'])
call TPluginAutoload('tlib#tag', ['tlib_vim', '.'])
call TPluginAutoload('tlib#textobjects', ['tlib_vim', '.'])
call TPluginAutoload('tlib#time', ['tlib_vim', '.'])
call TPluginAutoload('tlib#type', ['tlib_vim', '.'])
call TPluginAutoload('tlib#url', ['tlib_vim', '.'])
call TPluginAutoload('tlib#var', ['tlib_vim', '.'])
call TPluginAutoload('tlib#vim', ['tlib_vim', '.'])
call TPluginAutoload('tlib#win', ['tlib_vim', '.'])
call TPluginAutoload('tlib', ['tlib_vim', '.'])
call TPluginAutoload('tregisters', ['tregisters_vim', '.'])
call TPluginAutoload('ttags', ['ttags_vim', '.'])
call TPluginAutoload('ttoc', ['ttoc_vim', '.'])
call TPluginAutoload('togglebg', ['vim-colors-solarized', '.'])
call TPluginAutoload('color_helper', ['vim-indent-guides', '.'])
call TPluginAutoload('indent_guides', ['vim-indent-guides', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-notes', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-notes', '.'])
call TPluginAutoload('xolox#notes#tags', ['vim-notes', '.'])
call TPluginAutoload('xolox#notes', ['vim-notes', '.'])
call TPluginAutoload('repeat', ['vim-repeat', '.'])
call TPluginAutoload('common', ['vim-ruby-refactoring', '.'])
call TPluginAutoload('zencoding', ['zencoding-vim', '.'])
call TPluginRegisterRepo('ColorSchemeEditor')
call TPluginFunction('CSE_GetAllHighlights', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_GetHighlight', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_GetColorSchemeName', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_GetMetadata', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_GetBackground', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_SetBackground', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_DoColorscheme', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_GetColorsDirs', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_SetHighlight', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_GetDebugMode', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_ShowHelp', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_FindRgbTxt', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginFunction('CSE_StdoutTest', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginCommand('command! -nargs=0 ColorSchemeEditor', 'ColorSchemeEditor', 'ColorSchemeEditor')
call TPluginRegisterRepo('NrrwRgn')
call TPluginCommand('com! -range NRPrepare', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range NarrowRegion', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NRMulti', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NarrowWindow', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range NR', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range NRP', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NRV', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NUD', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NW', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NRM', 'NrrwRgn', 'NrrwRgn')
call TPluginMap('xnoremap <unique> <script> <Plug>NrrwrgnDo', 'NrrwRgn', 'NrrwRgn')
call TPluginRegisterRepo('ctrlp.vim')
call TPluginCommand('com! -n=? -com=dir CtrlP', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPBuffer', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPMRUFiles', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! ClearCtrlPCache', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! ClearAllCtrlPCaches', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! ResetCtrlP', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPCurWD', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPCurFile', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPRoot', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPTag', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPQuickfix', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPDir', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=buffer CtrlPBufTag', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! CtrlPBufTagAll', 'ctrlp.vim', 'ctrlp')
call TPluginRegisterRepo('dbext')
call TPluginCommand('command! -nargs=+ DBExecSQL', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ DBExecSQLTopX', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBConnect', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBDisconnect', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBCommit', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBRollback', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBListConnections', 'dbext', 'dbext')
call TPluginCommand('command! -range -nargs=0 DBExecRangeSQL', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ Call', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Select', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Update', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Insert', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Delete', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Drop', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Alter', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=+ Create', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=1 DBSetOption', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=? DBGetOption', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBSetOption', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBGetOption', 'dbext', 'dbext')
call TPluginCommand('command! -range -nargs=0 -bang DBVarRangeAssign', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBListVar', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=1 -bang DBSetVar', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeVariable DBSetVar', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 -range DBExecVisualSQL', 'dbext', 'dbext')
call TPluginMap('xmap <unique> <script> <Plug>DBExecVisualSQL', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 -range DBExecVisualSQLTopX', 'dbext', 'dbext')
call TPluginMap('xmap <unique> <script> <Plug>DBExecVisualTopXSQL', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQLUnderCursor', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQLUnderCursor', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQLUnderCursorTopX', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQLUnderTopXCursor', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQL', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQL', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -range DBSelectFromTable', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTable', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBSelectFromTableWithWhere', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTableWithWhere', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBSelectFromTableAskName', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTableAskName', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -range DBSelectFromTableTopX', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTopXTable', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -range DBDescribeTable', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeTable', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBDescribeTableAskName', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeTableAskName', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* -range DBDescribeProcedure', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeProcedure', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBDescribeProcedureAskName', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeProcedureAskName', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBPromptForBufferParameters', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBPromptForBufferParameters', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=* DBListColumn', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListColumn', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=? DBListTable', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListTable', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=? DBListProcedure', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListProcedure', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=? DBListView', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListView', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteTables', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteProcedures', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteViews', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBCheckModeline', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBOrientationToggle', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBOrientationToggle', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBHistory', 'dbext', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBHistory', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsOpen', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsClose', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsRefresh', 'dbext', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsToggleResize', 'dbext', 'dbext')
call TPluginFunction('DB_getDictionaryName', 'dbext', 'dbext')
call TPluginFunction('DB_DictionaryCreate', 'dbext', 'dbext')
call TPluginFunction('DB_listOption', 'dbext', 'dbext')
call TPluginFunction('DB_getListColumn', 'dbext', 'dbext')
call TPluginFunction('DB_getVisualBlock', 'dbext', 'dbext')
call TPluginFunction('DB_execCmd', 'dbext', 'dbext')
call TPluginRegisterRepo('delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateBS', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateCR', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateSpace', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateS-Tab', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateDel', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <buffer> <Plug>delimitMateJumpMany', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateReload', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateTest', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateSwitch', 'delimitMate', 'delimitMate')
call TPluginRegisterRepo('doc')
call TPluginCommand('command! -nargs=? -complete=buffer -bang Bonly', 'doc', 'BufOnly')
call TPluginCommand('command! -nargs=? -complete=buffer -bang BOnly', 'doc', 'BufOnly')
call TPluginCommand('command! -nargs=? -complete=buffer -bang Bufonly', 'doc', 'BufOnly')
call TPluginCommand('command! -nargs=? -complete=buffer -bang BufOnly', 'doc', 'BufOnly')
call TPluginFunction('BufOnly', 'doc', 'BufOnly')
call TPluginMap('map <silent> <Plug>StartDrawIt', 'doc', 'DrawItPlugin')
call TPluginCommand('com! -nargs=0 DIstart', 'doc', 'DrawItPlugin')
call TPluginMap('map <silent> <Plug>StopDrawIt', 'doc', 'DrawItPlugin')
call TPluginCommand('com! -nargs=0 DIstop', 'doc', 'DrawItPlugin')
call TPluginCommand('command! COLORSCROLL', 'doc', 'ScrollColor')
call TPluginCommand('command! SCROLLCOLOR', 'doc', 'ScrollColor')
call TPluginCommand('command! NEXTCOLOR', 'doc', 'ScrollColor')
call TPluginCommand('command! PREVCOLOR', 'doc', 'ScrollColor')
call TPluginCommand('command! CN', 'doc', 'ScrollColor')
call TPluginCommand('command! CP', 'doc', 'ScrollColor')
call TPluginFunction('ToggleMaxWins', 'doc', 'zoom')
call TPluginMap('nnoremap <silent> <script> <Plug>ZoomWin', 'doc', 'ZoomWinPlugin')
call TPluginCommand('com! ZoomWin', 'doc', 'ZoomWinPlugin')
call TPluginFunction('ZoomWin', 'doc', 'ZoomWinPlugin')
call TPluginCommand('com! -nargs=+ Wikipedia', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ Dictionary', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ WebBrowser', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ GoogleLucky', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ Google', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ GooglePythonDoc', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ Hoogle', 'doc', 'browser')
call TPluginCommand('com! -nargs=+ Hayoo', 'doc', 'browser')
call TPluginFunction('OpenWebBrowser', 'doc', 'browser')
call TPluginFunction('OpenGoogle', 'doc', 'browser')
call TPluginFunction('OpenWikipedia', 'doc', 'browser')
call TPluginFunction('OpenHoogle', 'doc', 'browser')
call TPluginFunction('OpenHayoo', 'doc', 'browser')
call TPluginFunction('OpenDictionary', 'doc', 'browser')
call TPluginFunction('OpenPhpFunction', 'doc', 'browser')
call TPluginFunction('OpenLink', 'doc', 'browser')
call TPluginCommand('command! -nargs=* Calendar', 'doc', 'calendar')
call TPluginCommand('command! -nargs=* CalendarH', 'doc', 'calendar')
call TPluginMap('nnoremap <silent> <Plug>CalendarV', 'doc', 'calendar')
call TPluginMap('nnoremap <silent> <Plug>CalendarH', 'doc', 'calendar')
call TPluginFunction('Calendar', 'doc', 'calendar')
call TPluginMap('nmap <silent> <Plug>SaveWinPosn', 'doc', 'cecutil')
call TPluginMap('nmap <silent> <Plug>RestoreWinPosn', 'doc', 'cecutil')
call TPluginCommand('com! -bar -nargs=0 SWP', 'doc', 'cecutil')
call TPluginCommand('com! -bar -nargs=0 RWP', 'doc', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 SM', 'doc', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 RM', 'doc', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 DM', 'doc', 'cecutil')
call TPluginFunction('SaveWinPosn', 'doc', 'cecutil')
call TPluginFunction('RestoreWinPosn', 'doc', 'cecutil')
call TPluginFunction('GoWinbufnr', 'doc', 'cecutil')
call TPluginFunction('SaveMark', 'doc', 'cecutil')
call TPluginFunction('RestoreMark', 'doc', 'cecutil')
call TPluginFunction('DestroyMark', 'doc', 'cecutil')
call TPluginFunction('QArgSplitter', 'doc', 'cecutil')
call TPluginFunction('SaveUserMaps', 'doc', 'cecutil')
call TPluginFunction('RestoreUserMaps', 'doc', 'cecutil')
call TPluginCommand('command CommandTBuffer', 'doc', 'command-t')
call TPluginCommand('command -nargs=? -complete=dir CommandT', 'doc', 'command-t')
call TPluginCommand('command CommandTFlush', 'doc', 'command-t')
call TPluginFunction('CommandTHandleKey', 'doc', 'command-t')
call TPluginFunction('CommandTBackspace', 'doc', 'command-t')
call TPluginFunction('CommandTDelete', 'doc', 'command-t')
call TPluginFunction('CommandTAcceptSelection', 'doc', 'command-t')
call TPluginFunction('CommandTAcceptSelectionTab', 'doc', 'command-t')
call TPluginFunction('CommandTAcceptSelectionSplit', 'doc', 'command-t')
call TPluginFunction('CommandTAcceptSelectionVSplit', 'doc', 'command-t')
call TPluginFunction('CommandTToggleFocus', 'doc', 'command-t')
call TPluginFunction('CommandTCancel', 'doc', 'command-t')
call TPluginFunction('CommandTSelectNext', 'doc', 'command-t')
call TPluginFunction('CommandTSelectPrev', 'doc', 'command-t')
call TPluginFunction('CommandTClear', 'doc', 'command-t')
call TPluginFunction('CommandTCursorLeft', 'doc', 'command-t')
call TPluginFunction('CommandTCursorRight', 'doc', 'command-t')
call TPluginFunction('CommandTCursorEnd', 'doc', 'command-t')
call TPluginFunction('CommandTCursorStart', 'doc', 'command-t')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTerm', 'doc', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTermSplit', 'doc', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTermVSplit', 'doc', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTermTab', 'doc', 'conque_term')
call TPluginCommand('command! FoldMisses', 'doc', 'foldmiss')
call TPluginCommand('command! -buffer -nargs=0 -bang Greplace', 'doc', 'greplace')
call TPluginCommand('command! -nargs=0 Gqfopen', 'doc', 'greplace')
call TPluginCommand('command! -nargs=* -complete=file Gsearch', 'doc', 'greplace')
call TPluginCommand('command! -nargs=* Gargsearch', 'doc', 'greplace')
call TPluginCommand('command! -nargs=* Gbuffersearch', 'doc', 'greplace')
call TPluginCommand('com -nargs=0 UB', 'doc', 'histwinPlugin')
call TPluginFunction('KeepCase', 'doc', 'keepcase')
call TPluginFunction('KeepCaseSameLen', 'doc', 'keepcase')
call TPluginCommand(':command! -nargs=1 -range SubstituteCase', 'doc', 'keepcase')
call TPluginCommand('command! -nargs=0 MatchDebug', 'doc', 'matchit')
call TPluginCommand('command! NoMatchParen', 'doc', 'matchparen++')
call TPluginCommand('command! DoMatchParen', 'doc', 'matchparen++')
call TPluginFunction('MvAddElement', 'doc', 'multvals')
call TPluginFunction('MvInsertElementAt', 'doc', 'multvals')
call TPluginFunction('MvRemoveElement', 'doc', 'multvals')
call TPluginFunction('MvRemovePattern', 'doc', 'multvals')
call TPluginFunction('MvRemoveElementAt', 'doc', 'multvals')
call TPluginFunction('MvRemoveElementAll', 'doc', 'multvals')
call TPluginFunction('MvReplaceElementAt', 'doc', 'multvals')
call TPluginFunction('MvRotateLeftAt', 'doc', 'multvals')
call TPluginFunction('MvRotateRightAt', 'doc', 'multvals')
call TPluginFunction('MvPushToFront', 'doc', 'multvals')
call TPluginFunction('MvPushToFrontElementAt', 'doc', 'multvals')
call TPluginFunction('MvPullToBack', 'doc', 'multvals')
call TPluginFunction('MvPullToBackElementAt', 'doc', 'multvals')
call TPluginFunction('MvSwapElementsAt', 'doc', 'multvals')
call TPluginFunction('MvQSortElements', 'doc', 'multvals')
call TPluginFunction('MvNumberOfElements', 'doc', 'multvals')
call TPluginFunction('MvStrIndexOfElement', 'doc', 'multvals')
call TPluginFunction('MvStrIndexOfPattern', 'doc', 'multvals')
call TPluginFunction('MvStrIndexAfterElement', 'doc', 'multvals')
call TPluginFunction('MvStrIndexAfterPattern', 'doc', 'multvals')
call TPluginFunction('MvLastElement', 'doc', 'multvals')
call TPluginFunction('MvStrIndexOfElementAt', 'doc', 'multvals')
call TPluginFunction('MvIndexOfElement', 'doc', 'multvals')
call TPluginFunction('MvIndexOfPattern', 'doc', 'multvals')
call TPluginFunction('MvContainsElement', 'doc', 'multvals')
call TPluginFunction('MvContainsPattern', 'doc', 'multvals')
call TPluginFunction('MvElementAt', 'doc', 'multvals')
call TPluginFunction('MvIterCreate', 'doc', 'multvals')
call TPluginFunction('MvIterDestroy', 'doc', 'multvals')
call TPluginFunction('MvIterHasNext', 'doc', 'multvals')
call TPluginFunction('MvIterNext', 'doc', 'multvals')
call TPluginFunction('MvCmpByPosition', 'doc', 'multvals')
call TPluginFunction('MvPromptForElement', 'doc', 'multvals')
call TPluginFunction('MvPromptForElement2', 'doc', 'multvals')
call TPluginCommand('com! -count=1 -nargs=* Nread', 'doc', 'netrwPlugin')
call TPluginCommand('com! -range=% -nargs=* Nwrite', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* NetUserPass', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* Nsource', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Explore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Sexplore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Hexplore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Vexplore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -count=0 -complete=dir Texplore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang Nexplore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang Pexplore', 'doc', 'netrwPlugin')
call TPluginCommand('com! -nargs=0 NetrwSettings', 'doc', 'netrwPlugin')
call TPluginCommand('com! -bang NetrwClean', 'doc', 'netrwPlugin')
call TPluginFunction('NetrwStatusLine', 'doc', 'netrwPlugin')
call TPluginFunction('NetUserPass', 'doc', 'netrwPlugin')
call TPluginFunction('OneLineFold', 'doc', 'onelinefold')
call TPluginFunction('IndentFold', 'doc', 'onelinefold')
call TPluginCommand('command! -nargs=0 Scratch', 'doc', 'scratch')
call TPluginCommand('command! -nargs=0 Sscratch', 'doc', 'scratch')
call TPluginFunction('SwapParams', 'doc', 'swap_parameters')
call TPluginCommand('command! -bang -nargs=* -bar TCalc', 'doc', 'tcalc')
call TPluginCommand('command -nargs=1 -complete=file TTCustom', 'doc', 'ttcplug')
call TPluginFunction('Texplore', 'doc', 'ttcplug')
call TPluginFunction('Tcustom', 'doc', 'ttcplug')
call TPluginFunction('TTComplete', 'doc', 'ttcplug')
call TPluginCommand('command -complete=custom,s:completeArgs -range -nargs=* Utl', 'doc', 'utl')
call TPluginFunction('Utl', 'doc', 'utl')
call TPluginFunction('Utl_getUrlUnderCursor', 'doc', 'utl')
call TPluginFunction('Utl_utilExpandConvSpec', 'doc', 'utl')
call TPluginFunction('Utl_trace', 'doc', 'utl')
call TPluginFunction('Utl_utilCopyExtract', 'doc', 'utl')
call TPluginFunction('Utl_utilFwd2BackSlashes', 'doc', 'utl')
call TPluginFunction('Utl_utilBack2FwdSlashes', 'doc', 'utl')
call TPluginFunction('Utl_if_hdl_scm_http__wget', 'doc', 'utl')
call TPluginFunction('Utl_if_hdl_scm_mail__outlook', 'doc', 'utl')
call TPluginFunction('Utl_if_hdl_mt_application_pdf_acrobat', 'doc', 'utl')
call TPluginFunction('Utl_if_hdl_mt_application_msword__word', 'doc', 'utl')
call TPluginFunction('Utl_AddressScheme_file', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_ftp', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_https', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_http', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_scp', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_mailto', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_man', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_foot', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_config', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_vimscript', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_vimtip', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_vimhelp', 'doc', 'utl_scm')
call TPluginFunction('Utl_AddressScheme_mail', 'doc', 'utl_scm')
call TPluginFunction('UtlUri_scheme', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_opaque', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_authority', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_path', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_query', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_fragment', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_build', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_build_2', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_abs', 'doc', 'utl_uri')
call TPluginFunction('UriRef_getUri', 'doc', 'utl_uri')
call TPluginFunction('UriRef_getFragment', 'doc', 'utl_uri')
call TPluginFunction('UtlUri_unescape', 'doc', 'utl_uri')
call TPluginFunction('WordComplete', 'doc', 'word_complete')
call TPluginFunction('DoWordComplete', 'doc', 'word_complete')
call TPluginFunction('EndWordComplete', 'doc', 'word_complete')
call TPluginRegisterRepo('easy-motion')
call TPluginFunction('EasyMotionF', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionT', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionWB', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionWBW', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionE', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionEW', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionJK', 'easy-motion', 'EasyMotion')
call TPluginFunction('EasyMotionSearch', 'easy-motion', 'EasyMotion')
call TPluginRegisterRepo('extradite')
call TPluginCommand('command! -buffer -bang Extradite', 'extradite', 'extradite')
call TPluginRegisterRepo('fugitive')
TPluginAfter \V/fugitive/plugin/ do fugitive_utility VimEnter
TPluginAfter \V/fugitive/plugin/ do fugitive VimEnter
call TPluginFunction('fugitive#buffer', 'fugitive', 'fugitive')
call TPluginFunction('fugitive#reload_status', 'fugitive', 'fugitive')
call TPluginFunction('fugitive#statusline', 'fugitive', 'fugitive')
call TPluginRegisterRepo('gitv')
call TPluginCommand('command! -nargs=* -range -bang Gitv', 'gitv', 'gitv')
call TPluginFunction('Gitv_OpenGitCommand', 'gitv', 'gitv')
call TPluginRegisterRepo('gundo')
call TPluginCommand('command! -nargs=0 GundoToggle', 'gundo', 'gundo')
call TPluginCommand('command! -nargs=0 GundoRenderGraph', 'gundo', 'gundo')
call TPluginRegisterRepo('plugin')
call TPluginRegisterRepo('quickfixsigns_vim')
call TPluginCommand('command! QuickfixsignsSet', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginCommand('command! -nargs=+ -complete=customlist,quickfixsigns#CompleteSelect QuickfixsignsSelect', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsSelect', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsUpdate', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsSet', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsBalloon', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsClear', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginRegisterRepo('rails')
TPluginAfter \V/rails/plugin/ do railsPluginDetect VimEnter
call TPluginCommand('command! -bar -bang -nargs=* -complete=dir Rails', 'rails', 'rails')
TPluginAfter \V/rails/plugin/ do railsPluginAbolish VimEnter
TPluginAfter \V/rails/plugin/ do railsPluginMenu VimEnter
call TPluginRegisterRepo('rainbow_parentheses.vim')
call TPluginCommand('com! RainbowParenthesesToggle', 'rainbow_parentheses.vim', 'rainbow_parentheses')
call TPluginCommand('com! RainbowParenthesesLoadRound', 'rainbow_parentheses.vim', 'rainbow_parentheses')
call TPluginCommand('com! RainbowParenthesesLoadSquare', 'rainbow_parentheses.vim', 'rainbow_parentheses')
call TPluginCommand('com! RainbowParenthesesLoadBraces', 'rainbow_parentheses.vim', 'rainbow_parentheses')
call TPluginCommand('com! RainbowParenthesesLoadChevrons', 'rainbow_parentheses.vim', 'rainbow_parentheses')
call TPluginRegisterRepo('surround')
call TPluginMap('nnoremap <silent> <Plug>Dsurround', 'surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Csurround', 'surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Yssurround', 'surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>YSsurround', 'surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Ysurround', 'surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>YSurround', 'surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>Vsurround', 'surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>VSurround', 'surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>VgSurround', 'surround', 'surround')
call TPluginMap('inoremap <silent> <Plug>Isurround', 'surround', 'surround')
call TPluginMap('inoremap <silent> <Plug>ISurround', 'surround', 'surround')
call TPluginRegisterRepo('syntastic')
call TPluginCommand('command Errors', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticStatuslineFlag', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticMake', 'syntastic', 'syntastic')
call TPluginCommand('command! -nargs=? SyntasticEnable', 'syntastic', 'syntastic')
call TPluginCommand('command! -nargs=? SyntasticDisable', 'syntastic', 'syntastic')
call TPluginRegisterRepo('threesome.vim')
call TPluginCommand('command! -nargs=0 ThreesomeInit', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeGrid', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeLoupe', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeCompare', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomePath', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeOriginal', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeOne', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeTwo', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeResult', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeDiff', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeDiffoff', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeScroll', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeLayout', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeNext', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomePrev', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeUse', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeUse1', 'threesome.vim', 'threesome')
call TPluginCommand('command! -nargs=0 ThreesomeUse2', 'threesome.vim', 'threesome')
call TPluginRegisterRepo('tjumps_vim')
call TPluginCommand('command! -bang -nargs=? Tjumps', 'tjumps_vim', 'tjumps')
call TPluginRegisterRepo('tlib_vim')
call TPluginCommand('command! -nargs=+ TRequire', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TLet', 'tlib_vim', '02tlib')
call TPluginCommand('command! -bar -nargs=* -bang TScratch', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TVarArg', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TKeyArg', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=1 -complete=command TBrowseOutput', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=0 -complete=command TBrowseScriptnames', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=1 -complete=command TTimeCommand', 'tlib_vim', '02tlib')
call TPluginRegisterRepo('tregisters_vim')
call TPluginCommand('command! TRegisters', 'tregisters_vim', 'tregisters')
call TPluginRegisterRepo('ttags_vim')
call TPluginCommand('command! -nargs=* -bang TTags', 'ttags_vim', 'ttags')
call TPluginCommand('command! -nargs=* -bang TTagselect', 'ttags_vim', 'ttags')
call TPluginRegisterRepo('ttoc_vim')
call TPluginCommand('command! -nargs=? -bang -count TToC', 'ttoc_vim', 'ttoc')
call TPluginCommand('command! -nargs=? -bang -count Ttoc', 'ttoc_vim', 'ttoc')
call TPluginCommand('command! -nargs=? -bang -count Ttocbg', 'ttoc_vim', 'ttoc')
call TPluginRegisterRepo('vim-abolish')
call TPluginFunction('Abolished', 'vim-abolish', 'abolish')
call TPluginMap('nnoremap <silent> <Plug>Coerce', 'vim-abolish', 'abolish')
call TPluginCommand('command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish', 'vim-abolish', 'abolish')
call TPluginCommand('command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert', 'vim-abolish', 'abolish')
call TPluginCommand('command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S', 'vim-abolish', 'abolish')
call TPluginRegisterRepo('vim-bufsurf')
call TPluginCommand('command BufSurfBack', 'vim-bufsurf', 'bufsurf')
call TPluginCommand('command BufSurfForward', 'vim-bufsurf', 'bufsurf')
call TPluginRegisterRepo('vim-editqf')
call TPluginCommand('command! -nargs=* -bang QFAddNote', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=* -bang QFAddNotePattern', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=? -bang -complete=file QFSave', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=? -bang -complete=file QFLoad', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=* -bang LocAddNote', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=* -bang LocAddNotePattern', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=? -bang -complete=file LocSave', 'vim-editqf', 'editqf')
call TPluginCommand('command! -nargs=? -bang -complete=file LocLoad', 'vim-editqf', 'editqf')
call TPluginMap('nmap <Plug>QFAddNote', 'vim-editqf', 'editqf')
call TPluginMap('nmap <Plug>QFAddNotePattern', 'vim-editqf', 'editqf')
call TPluginMap('nmap <Plug>LocAddNote', 'vim-editqf', 'editqf')
call TPluginMap('nmap <Plug>LocAddNotePattern', 'vim-editqf', 'editqf')
call TPluginRegisterRepo('vim-fastwordcompleter')
call TPluginFunction('CompleteIfLongEnough', 'vim-fastwordcompleter', 'fastwordcompleter')
call TPluginCommand('command! -nargs=0 FastWordCompletionStart', 'vim-fastwordcompleter', 'fastwordcompleter')
call TPluginCommand('command! -nargs=0 FastWordCompletionStop', 'vim-fastwordcompleter', 'fastwordcompleter')
call TPluginRegisterRepo('vim-indent-guides')
call TPluginCommand('command! -bar IndentGuidesToggle', 'vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesEnable', 'vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesDisable', 'vim-indent-guides', 'indent_guides')
TPluginAfter \V/vim-indent-guides/plugin/ do indent_guides VimEnter
call TPluginRegisterRepo('vim-notes')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#notes#cmd_complete Note', 'vim-notes', 'notes')
call TPluginCommand('command! -bar -bang -range NoteFromSelectedText', 'vim-notes', 'notes')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#notes#cmd_complete DeleteNote', 'vim-notes', 'notes')
call TPluginCommand('command! -bang -nargs=? SearchNotes', 'vim-notes', 'notes')
call TPluginCommand('command! -bar -bang RelatedNotes', 'vim-notes', 'notes')
call TPluginCommand('command! -bar -bang -nargs=? RecentNotes', 'vim-notes', 'notes')
call TPluginCommand('command! -bar -count=1 ShowTaggedNotes', 'vim-notes', 'notes')
call TPluginCommand('command! -bar IndexTaggedNotes', 'vim-notes', 'notes')
call TPluginRegisterRepo('vim-rspec')
call TPluginFunction('RunSpec', 'vim-rspec', 'vim-rspec')
call TPluginFunction('RunSpecs', 'vim-rspec', 'vim-rspec')
call TPluginCommand('command! RunSpec', 'vim-rspec', 'vim-rspec')
call TPluginCommand('command! RunSpecs', 'vim-rspec', 'vim-rspec')
call TPluginRegisterRepo('vim-ruby-refactoring')
call TPluginCommand('command! RAddParameter', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! RAddParameterNB', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! RInlineTemp', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! RExtractLet', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! RConvertPostConditional', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! RIntroduceVariable', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! -range RExtractConstant', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! -range RExtractLocalVariable', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! -range RRenameLocalVariable', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! -range RRenameInstanceVariable', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginCommand('command! -range RExtractMethod', 'vim-ruby-refactoring', 'ruby-refactoring')
call TPluginRegisterRepo('vim-speeddating')
call TPluginCommand('command! -bar -bang -count=0 -nargs=? SpeedDatingFormat', 'vim-speeddating', 'speeddating')
call TPluginMap('nnoremap <silent> <Plug>SpeedDatingUp', 'vim-speeddating', 'speeddating')
call TPluginMap('nnoremap <silent> <Plug>SpeedDatingDown', 'vim-speeddating', 'speeddating')
call TPluginMap('vnoremap <silent> <Plug>SpeedDatingUp', 'vim-speeddating', 'speeddating')
call TPluginMap('vnoremap <silent> <Plug>SpeedDatingDown', 'vim-speeddating', 'speeddating')
call TPluginMap('nnoremap <silent> <Plug>SpeedDatingNowLocal', 'vim-speeddating', 'speeddating')
call TPluginMap('nnoremap <silent> <Plug>SpeedDatingNowUTC', 'vim-speeddating', 'speeddating')
call TPluginRegisterRepo('zencoding-vim')
